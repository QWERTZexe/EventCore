plugins {
    id "java"
    id "maven-publish"
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    compileOnly "me.clip:placeholderapi:2.11.6"
    implementation "com.github.SkriptLang:Skript:2.7.0"
    implementation "net.kyori:adventure-text-minimessage:4.17.0"
    implementation "net.kyori:adventure-platform-bukkit:4.3.3"
}

jar {
    archiveBaseName.set("${rootProject.name}-api")
    archiveVersion.set(version.toString())
    archiveClassifier.set("")
    destinationDirectory.set(file("${rootProject.buildDir}/libs/api"))
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}

def oldestJava = 17
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["-source", "" + oldestJava, "-target", "" + oldestJava]
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allSource
    archiveBaseName.set("${rootProject.name}-api")
    archiveVersion.set(version.toString())
    archiveClassifier.set("sources")
    destinationDirectory.set(file("${rootProject.buildDir}/libs/api"))
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}